{"ast":null,"code":"// src/use-tooltip.ts\nimport { getScrollParent } from \"@chakra-ui/dom-utils\";\nimport { popperCSSVars, usePopper } from \"@chakra-ui/popper\";\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useEffect, useId, useRef } from \"react\";\nvar getDoc = ref => {\n  var _a;\n  return ((_a = ref.current) == null ? void 0 : _a.ownerDocument) || document;\n};\nvar getWin = ref => {\n  var _a, _b;\n  return ((_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) == null ? void 0 : _b.defaultView) || window;\n};\nfunction useTooltip(props = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    closeOnScroll,\n    closeOnPointerDown = closeOnMouseDown,\n    closeOnEsc = true,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    direction,\n    ...htmlProps\n  } = props;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  });\n  const {\n    referenceRef,\n    getPopperProps,\n    getArrowInnerProps,\n    getArrowProps\n  } = usePopper({\n    enabled: isOpen,\n    placement,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n    direction\n  });\n  const uuid = useId();\n  const uid = id != null ? id : uuid;\n  const tooltipId = `tooltip-${uid}`;\n  const ref = useRef(null);\n  const enterTimeout = useRef();\n  const clearEnterTimeout = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n      enterTimeout.current = void 0;\n    }\n  }, []);\n  const exitTimeout = useRef();\n  const clearExitTimeout = useCallback(() => {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current);\n      exitTimeout.current = void 0;\n    }\n  }, []);\n  const closeNow = useCallback(() => {\n    clearExitTimeout();\n    onClose();\n  }, [onClose, clearExitTimeout]);\n  const dispatchCloseEvent = useCloseEvent(ref, closeNow);\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled && !enterTimeout.current) {\n      dispatchCloseEvent();\n      const win = getWin(ref);\n      enterTimeout.current = win.setTimeout(onOpen, openDelay);\n    }\n  }, [dispatchCloseEvent, isDisabled, onOpen, openDelay]);\n  const closeWithDelay = useCallback(() => {\n    clearEnterTimeout();\n    const win = getWin(ref);\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay);\n  }, [closeDelay, closeNow, clearEnterTimeout]);\n  const onClick = useCallback(() => {\n    if (isOpen && closeOnClick) {\n      closeWithDelay();\n    }\n  }, [closeOnClick, closeWithDelay, isOpen]);\n  const onPointerDown = useCallback(() => {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay();\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen]);\n  const onKeyDown = useCallback(event => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay();\n    }\n  }, [isOpen, closeWithDelay]);\n  useEventListener(() => getDoc(ref), \"keydown\", closeOnEsc ? onKeyDown : void 0);\n  useEventListener(() => {\n    const node = ref.current;\n    if (!node) return null;\n    const scrollParent = getScrollParent(node);\n    return scrollParent.localName === \"body\" ? getWin(ref) : scrollParent;\n  }, \"scroll\", () => {\n    if (isOpen && closeOnScroll) {\n      closeNow();\n    }\n  }, {\n    passive: true,\n    capture: true\n  });\n  useEffect(() => {\n    if (!isDisabled) return;\n    clearEnterTimeout();\n    if (isOpen) onClose();\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout]);\n  useEffect(() => {\n    return () => {\n      clearEnterTimeout();\n      clearExitTimeout();\n    };\n  }, [clearEnterTimeout, clearExitTimeout]);\n  useEventListener(() => ref.current, \"pointerleave\", closeWithDelay);\n  const getTriggerProps = useCallback((props2 = {}, _ref = null) => {\n    const triggerProps = {\n      ...props2,\n      ref: mergeRefs(ref, _ref, referenceRef),\n      onPointerEnter: callAllHandlers(props2.onPointerEnter, e => {\n        if (e.pointerType === \"touch\") return;\n        openWithDelay();\n      }),\n      onClick: callAllHandlers(props2.onClick, onClick),\n      onPointerDown: callAllHandlers(props2.onPointerDown, onPointerDown),\n      onFocus: callAllHandlers(props2.onFocus, openWithDelay),\n      onBlur: callAllHandlers(props2.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : void 0\n    };\n    return triggerProps;\n  }, [openWithDelay, closeWithDelay, onPointerDown, isOpen, tooltipId, onClick, referenceRef]);\n  const getTooltipPositionerProps = useCallback((props2 = {}, forwardedRef = null) => getPopperProps({\n    ...props2,\n    style: {\n      ...props2.style,\n      [popperCSSVars.arrowSize.var]: arrowSize ? `${arrowSize}px` : void 0,\n      [popperCSSVars.arrowShadowColor.var]: arrowShadowColor\n    }\n  }, forwardedRef), [getPopperProps, arrowSize, arrowShadowColor]);\n  const getTooltipProps = useCallback((props2 = {}, ref2 = null) => {\n    const styles = {\n      ...props2.style,\n      position: \"relative\",\n      transformOrigin: popperCSSVars.transformOrigin.varRef\n    };\n    return {\n      ref: ref2,\n      ...htmlProps,\n      ...props2,\n      id: tooltipId,\n      role: \"tooltip\",\n      style: styles\n    };\n  }, [htmlProps, tooltipId]);\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps\n  };\n}\nvar closeEventName = \"chakra-ui:close-tooltip\";\nfunction useCloseEvent(ref, close) {\n  useEffect(() => {\n    const doc = getDoc(ref);\n    doc.addEventListener(closeEventName, close);\n    return () => doc.removeEventListener(closeEventName, close);\n  }, [close, ref]);\n  return () => {\n    const doc = getDoc(ref);\n    const win = getWin(ref);\n    doc.dispatchEvent(new win.CustomEvent(closeEventName));\n  };\n}\nexport { useTooltip };","map":{"version":3,"names":["getScrollParent","popperCSSVars","usePopper","useDisclosure","useEventListener","mergeRefs","callAllHandlers","useCallback","useEffect","useId","useRef","getDoc","ref","_a","current","ownerDocument","document","getWin","_b","defaultView","window","useTooltip","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","closeOnScroll","closeOnPointerDown","closeOnEsc","onOpen","onOpenProp","onClose","onCloseProp","placement","id","isOpen","isOpenProp","defaultIsOpen","arrowSize","arrowShadowColor","arrowPadding","modifiers","isDisabled","gutter","offset","direction","htmlProps","referenceRef","getPopperProps","getArrowInnerProps","getArrowProps","enabled","uuid","uid","tooltipId","enterTimeout","clearEnterTimeout","clearTimeout","exitTimeout","clearExitTimeout","closeNow","dispatchCloseEvent","useCloseEvent","openWithDelay","win","setTimeout","closeWithDelay","onClick","onPointerDown","onKeyDown","event","key","node","scrollParent","localName","passive","capture","getTriggerProps","props2","_ref","triggerProps","onPointerEnter","e","pointerType","onFocus","onBlur","getTooltipPositionerProps","forwardedRef","style","var","getTooltipProps","ref2","styles","position","transformOrigin","varRef","role","show","hide","closeEventName","close","doc","addEventListener","removeEventListener","dispatchEvent","CustomEvent"],"sources":["C:/Users/carlos/Documents/lider_curso/AI4Devs-finalproject/src/frontend/node_modules/@chakra-ui/tooltip/dist/chunk-F4AIO6ZK.mjs"],"sourcesContent":["// src/use-tooltip.ts\nimport { getScrollParent } from \"@chakra-ui/dom-utils\";\nimport { popperCSSVars, usePopper } from \"@chakra-ui/popper\";\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport {\n  useCallback,\n  useEffect,\n  useId,\n  useRef\n} from \"react\";\nvar getDoc = (ref) => {\n  var _a;\n  return ((_a = ref.current) == null ? void 0 : _a.ownerDocument) || document;\n};\nvar getWin = (ref) => {\n  var _a, _b;\n  return ((_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) == null ? void 0 : _b.defaultView) || window;\n};\nfunction useTooltip(props = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    closeOnScroll,\n    closeOnPointerDown = closeOnMouseDown,\n    closeOnEsc = true,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    direction,\n    ...htmlProps\n  } = props;\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  });\n  const { referenceRef, getPopperProps, getArrowInnerProps, getArrowProps } = usePopper({\n    enabled: isOpen,\n    placement,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n    direction\n  });\n  const uuid = useId();\n  const uid = id != null ? id : uuid;\n  const tooltipId = `tooltip-${uid}`;\n  const ref = useRef(null);\n  const enterTimeout = useRef();\n  const clearEnterTimeout = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n      enterTimeout.current = void 0;\n    }\n  }, []);\n  const exitTimeout = useRef();\n  const clearExitTimeout = useCallback(() => {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current);\n      exitTimeout.current = void 0;\n    }\n  }, []);\n  const closeNow = useCallback(() => {\n    clearExitTimeout();\n    onClose();\n  }, [onClose, clearExitTimeout]);\n  const dispatchCloseEvent = useCloseEvent(ref, closeNow);\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled && !enterTimeout.current) {\n      dispatchCloseEvent();\n      const win = getWin(ref);\n      enterTimeout.current = win.setTimeout(onOpen, openDelay);\n    }\n  }, [dispatchCloseEvent, isDisabled, onOpen, openDelay]);\n  const closeWithDelay = useCallback(() => {\n    clearEnterTimeout();\n    const win = getWin(ref);\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay);\n  }, [closeDelay, closeNow, clearEnterTimeout]);\n  const onClick = useCallback(() => {\n    if (isOpen && closeOnClick) {\n      closeWithDelay();\n    }\n  }, [closeOnClick, closeWithDelay, isOpen]);\n  const onPointerDown = useCallback(() => {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay();\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen]);\n  const onKeyDown = useCallback(\n    (event) => {\n      if (isOpen && event.key === \"Escape\") {\n        closeWithDelay();\n      }\n    },\n    [isOpen, closeWithDelay]\n  );\n  useEventListener(\n    () => getDoc(ref),\n    \"keydown\",\n    closeOnEsc ? onKeyDown : void 0\n  );\n  useEventListener(\n    () => {\n      const node = ref.current;\n      if (!node)\n        return null;\n      const scrollParent = getScrollParent(node);\n      return scrollParent.localName === \"body\" ? getWin(ref) : scrollParent;\n    },\n    \"scroll\",\n    () => {\n      if (isOpen && closeOnScroll) {\n        closeNow();\n      }\n    },\n    { passive: true, capture: true }\n  );\n  useEffect(() => {\n    if (!isDisabled)\n      return;\n    clearEnterTimeout();\n    if (isOpen)\n      onClose();\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout]);\n  useEffect(() => {\n    return () => {\n      clearEnterTimeout();\n      clearExitTimeout();\n    };\n  }, [clearEnterTimeout, clearExitTimeout]);\n  useEventListener(() => ref.current, \"pointerleave\", closeWithDelay);\n  const getTriggerProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      const triggerProps = {\n        ...props2,\n        ref: mergeRefs(ref, _ref, referenceRef),\n        onPointerEnter: callAllHandlers(props2.onPointerEnter, (e) => {\n          if (e.pointerType === \"touch\")\n            return;\n          openWithDelay();\n        }),\n        onClick: callAllHandlers(props2.onClick, onClick),\n        onPointerDown: callAllHandlers(props2.onPointerDown, onPointerDown),\n        onFocus: callAllHandlers(props2.onFocus, openWithDelay),\n        onBlur: callAllHandlers(props2.onBlur, closeWithDelay),\n        \"aria-describedby\": isOpen ? tooltipId : void 0\n      };\n      return triggerProps;\n    },\n    [\n      openWithDelay,\n      closeWithDelay,\n      onPointerDown,\n      isOpen,\n      tooltipId,\n      onClick,\n      referenceRef\n    ]\n  );\n  const getTooltipPositionerProps = useCallback(\n    (props2 = {}, forwardedRef = null) => getPopperProps(\n      {\n        ...props2,\n        style: {\n          ...props2.style,\n          [popperCSSVars.arrowSize.var]: arrowSize ? `${arrowSize}px` : void 0,\n          [popperCSSVars.arrowShadowColor.var]: arrowShadowColor\n        }\n      },\n      forwardedRef\n    ),\n    [getPopperProps, arrowSize, arrowShadowColor]\n  );\n  const getTooltipProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const styles = {\n        ...props2.style,\n        position: \"relative\",\n        transformOrigin: popperCSSVars.transformOrigin.varRef\n      };\n      return {\n        ref: ref2,\n        ...htmlProps,\n        ...props2,\n        id: tooltipId,\n        role: \"tooltip\",\n        style: styles\n      };\n    },\n    [htmlProps, tooltipId]\n  );\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps\n  };\n}\nvar closeEventName = \"chakra-ui:close-tooltip\";\nfunction useCloseEvent(ref, close) {\n  useEffect(() => {\n    const doc = getDoc(ref);\n    doc.addEventListener(closeEventName, close);\n    return () => doc.removeEventListener(closeEventName, close);\n  }, [close, ref]);\n  return () => {\n    const doc = getDoc(ref);\n    const win = getWin(ref);\n    doc.dispatchEvent(new win.CustomEvent(closeEventName));\n  };\n}\n\nexport {\n  useTooltip\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}